DROP TABLE USERS;

CREATE TABLE USERS(
	USER_ID NUMBER,
	LOGIN_ID VARCHAR2(1000),
	PASSWORD VARCHAR2(1000),
	NAME VARCHAR2(300),
	ADDRESS VARCHAR2(1000),
	EMAIL VARCHAR2(1000),
	BIRDH DATE,
	CONSTRAINT PK_USERS PRIMARY KEY(USER_ID),
	CONSTRAINT UN_USERS UNIQUE(LOGIN_ID)
);
	
CREATE TABLE PHONE(
	PHONE_ID NUMBER,
	COLOR VARCHAR2(300),
	PHONE_SIZE NUMBER,
	PRICE NUMBER,
	SALE NUMBER,
	PRODUCTION_DATE DATE,
	CONSTRAINT PK_PHONE PRIMARY KEY(PHONE_ID)
);



CREATE TABLE PHONE_CASE(
	CASE_ID NUMBER,
	COLOR VARCHAR2(300),
	PRICE NUMBER,
	PHONE_ID NUMBER,
	CONSTRAINT PK_CASE PRIMARY KEY(CASE_ID),
	CONSTRAINT FK_CASE FOREIGN KEY(PHONE_ID)
		REFERENCES PHONE(PHONE_ID)
);

CREATE TABLE MEMBERS(
	MEMBER_ID NUMBER,
	NAME VARCHAR2(300),
	AGE NUMBER,
	PHONE NUMBER,
	ADDRESS VARCHAR2(1000),
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID)
);

CREATE TABLE BOOK(
	BOOK_ID NUMBER,
	NAME VARCHAR2(1000),
	CATEGORY VARCHAR2(1000),
	MEMBER_ID NUMBER,
	CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_ID),
	CONSTRAINT CK_CATEGORY CHECK (CATEGORY IN('인문학','추리','IT','로맨스')),
	CONSTRAINT FK_BOOK FOREIGN KEY(MEMBER_ID)
		REFERENCES MEMBERS(MEMBER_ID)
);

DROP TABLE PHONE;

--=========================================================

SELECT *FROM PHONE p ;
SELECT *FROM PHONE_CASE pc ;

INSERT INTO PHONE
(PHONE_ID, COLOR, PHONE_SIZE, PRICE, SALE, PRODUCTION_DATE)
VALUES(1, 'WHITE', 1, 100, 0, '2021-02-12');
-- DATE 타입의 칼럼에 문자타입의 값을 'YYY-MM-DD'의 형태로 넣으면
-- 자동으로 DATE타입으로 변환되어 들어간다.

INSERT INTO PHONE
(PHONE_ID, COLOR, PHONE_SIZE, PRICE, SALE, PRODUCTION_DATE)
VALUES(2, 'BLACK', 1, 120, 10, SYSDATE - 10);	

INSERT INTO PHONE
(PHONE_ID, COLOR, PHONE_SIZE, PRICE, SALE, PRODUCTION_DATE)
VALUES(3, 'BLACK', 1, 120, 20, '2000/10/10');

INSERT INTO PHONE
(PHONE_ID, COLOR, PHONE_SIZE, PRICE, SALE, PRODUCTION_DATE)
VALUES(4, 'BLACK', 1, 120, 20, TO_DATE('2000년 10월 10일', 'YYYY"년 "MM"월 "DD"일"'));
--TO_DATE() 함수를 이용하여 문자열을 직접 DATE타입으로 바꿀 수도 있다.

SELECT  TO_DATE('2000년 10월 10일','YYYY"년 "MM"월 "DD"일 "') FROM DUAL;
SELECT *FROM PHONE p ;



INSERT INTO PHONE_CASE
(CASE_ID, COLOR, PRICE, PHONE_ID)
VALUES(1, 'WHITE', 100, 1);

INSERT INTO PHONE_CASE
(CASE_ID, COLOR, PRICE, PHONE_ID)
VALUES(2, 'WHITE', 150, 1);

INSERT INTO PHONE_CASE
(CASE_ID, COLOR, PRICE, PHONE_ID)
VALUES(3, 'BLACK', 200, 2);

/*
 * 자식에서 부모테이블의 값을 참조중인 경우 부모테이블의 값을
 * 수정할 수 없다.
 * 이럴경우 자식에서 참조중인 데이터를 다른 값으로 바꾸거나
 * NULL로 변경하고 부모테이블 값을 수정한다.
 */

UPDATE PHONE_CASE  
SET PHONE_ID = NULL 
WHERE PHONE_ID = 2;

UPDATE PHONE 
SET PHONE_ID = 10
WHERE PHONE_ID = 2;

UPDATE PHONE_CASE 
SET PHONE_ID =10
WHERE PHONE_ID IS NULL;

-- 부모 테이블에서 데이터 삭제하기
UPDATE PHONE_CASE 
SET PHONE_ID = 3
WHERE PHONE_ID = 10;


DELETE FROM PHONE p 
WHERE PHONE_ID = 10;

DELETE FROM PHONE_CASE pc 
WHERE PHONE_ID =3;

DELETE FROM PHONE p 
WHERE PHONE_ID =3;

SELECT *FROM PHONE p ;
SELECT *FROM PHONE_CASE pc ;


--[실습]
/*
 * BOOK과 MEMBER테이블을 활용하여 다음 문제를 해결하기
 */


-- 회원 정보 추가
SELECT *FROM MEMBERS m ;
SELECT *FROM BOOK;

INSERT INTO MEMBERS
(MEMBER_ID, NAME, AGE, PHONE, ADDRESS)
VALUES(1, '홍길동', 20, 01011111111, '서울');

INSERT INTO MEMBERS
(MEMBER_ID, NAME, AGE, PHONE, ADDRESS)
VALUES(2, '김철수', 22, 01022222222, '경기');

INSERT INTO MEMBERS
(MEMBER_ID, NAME, AGE, PHONE, ADDRESS)
VALUES(3, '최유리', 24, 01033333333, '인천');

SELECT *FROM MEMBERS m ;

-- 책 정보 추가
INSERT INTO BOOK
(BOOK_ID, NAME, CATEGORY, MEMBER_ID)
VALUES(1, '어린왕자', '인문학', 1);

INSERT INTO BOOK
(BOOK_ID, NAME, CATEGORY, MEMBER_ID)
VALUES(2, '명탐정 코난', '추리', 2);

INSERT INTO BOOK
(BOOK_ID, NAME, CATEGORY, MEMBER_ID)
VALUES(3, 'JAVA', 'IT', 3);


-- 회원 이름 수정
UPDATE MEMBERS  
SET NAME = '신짱구' 
WHERE NAME = '홍길동';

-- 책 대여하기
UPDATE BOOK 
SET MEMBER_ID = 3
WHERE NAME = '명탐정 코난';

-- 책을 대여한 회원 번호 수정
UPDATE BOOK 
SET MEMBER_ID = NULL 
WHERE MEMBER_ID = 1;

UPDATE MEMBERS 
SET MEMBER_ID = 10
WHERE MEMBER_ID =1;

UPDATE BOOK 
SET MEMBER_ID = 10
WHERE MEMBER_ID IS NULL;

SELECT *FROM MEMBERS m ;
SELECT *FROM BOOK b ;

-- 책을 대여한 회원 삭제

UPDATE BOOK 
SET MEMBER_ID = 3
WHERE MEMBER_ID =10;

DELETE FROM MEMBERS m 
WHERE MEMBER_ID = 10;






